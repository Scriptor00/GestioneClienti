@model GestioneClienti.ViewModel.LoginViewModel

@{
    ViewData["Title"] = "Accedi";
}

<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto:wght@400;500&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #0d6efd;
            --secondary-color: #ff4b2b;
            --dark-bg: #1a1a1a;
            --darker-bg: #121212;
            --text-light: #f8f9fa;
        }

        body {
            background: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), 
                        url('https://images.unsplash.com/photo-1542751371-adc38448a05e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') no-repeat center center fixed;
            background-size: cover;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: 'Roboto', sans-serif;
            color: var(--text-light);
        }

        .login-container {
            background: rgba(26, 26, 26, 0.9);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(13, 110, 253, 0.3);
            padding: 40px;
            width: 100%;
            max-width: 450px;
            border: 1px solid var(--primary-color);
            backdrop-filter: blur(10px);
        }

        .login-title {
            font-family: 'Orbitron', sans-serif;
            color: var(--primary-color);
            text-align: center;
            margin-bottom: 30px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 0 0 10px rgba(13, 110, 253, 0.5);
        }

        .form-control {
            background-color: rgba(30, 30, 30, 0.8);
            border: 1px solid #333;
            color: var(--text-light);
            border-radius: 8px;
            padding: 12px 20px;
            transition: all 0.3s;
        }

        /* PLACEHOLDER BIANCO */
        .form-control::placeholder {
            color: #ccc !important;
            opacity: 1 !important;
        }

        /* TESTO SCRITTO BIANCO */
        .form-control {
            color: white !important;
        }

        .form-control:focus {
            background-color: rgba(40, 40, 40, 0.9);
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            color: var(--text-light);
        }

        .btn-login {
            background: linear-gradient(45deg, var(--primary-color), #0b5ed7);
            border: none;
            border-radius: 8px;
            padding: 12px;
            font-weight: 500;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: all 0.3s;
            width: 100%;
            margin-top: 15px;
            box-shadow: 0 4px 15px rgba(13, 110, 253, 0.4);
        }

        .btn-login:hover {
            background: linear-gradient(45deg, #0b5ed7, var(--primary-color));
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(13, 110, 253, 0.6);
        }

        .form-group {
            margin-bottom: 25px;
        }

        label {
            font-weight: 500;
            margin-bottom: 8px;
            color: #adb5bd;
        }

        .password-container {
            position: relative;
        }

        #togglePassword {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
            cursor: pointer;
            transition: color 0.3s;
        }

        #togglePassword:hover {
            color: var(--primary-color);
        }

        .alert-danger {
            background-color: rgba(220, 53, 69, 0.2);
            border: 1px solid rgba(220, 53, 69, 0.3);
            color: #dc3545;
            border-radius: 8px;
        }

        .checkbox label {
            color: #adb5bd;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

        .checkbox input {
            margin-right: 10px;
            cursor: pointer;
        }

        .links-container {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .links-container a {
            color: #6c757d;
            text-decoration: none;
            transition: color 0.3s;
            font-size: 14px;
        }

        .links-container a:hover {
            color: var(--primary-color);
            text-decoration: none;
        }

        .register-link {
            text-align: center;
            margin-top: 25px;
            color: #6c757d;
        }

        .register-link a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
        }

        .register-link a:hover {
            color: #0b5ed7;
            text-decoration: underline;
        }

        /* Animazioni */
        @@keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(13, 110, 253, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(13, 110, 253, 0); }
            100% { box-shadow: 0 0 0 0 rgba(13, 110, 253, 0); }
        }

        .login-container {
            animation: fadeIn 0.5s ease-out;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .alert-success {
    background-color: rgba(25, 135, 84, 0.9);
    border: 1px solid #0f5132;
    color: white;
    border-radius: 8px;
    margin-bottom: 20px;
    animation: fadeIn 0.5s ease-out;
     transition: opacity 0.5s ease-out;
}
.fade-out {
    opacity: 0;
}

.btn-close {
    filter: invert(1);
}
    </style>
</head>
<body>
    <div class="login-container">
        <h3 class="login-title"><i class="bi bi-controller me-2"></i>ACCEDI</h3>

        @if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

        @if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

       <form method="post" asp-action="Login" asp-controller="Account" autocomplete="off">
    @Html.AntiForgeryToken()

    <input type="text" style="display:none;" name="fakeUsername" autocomplete="username" tabindex="-1" aria-hidden="true">

    <div class="form-group">
        <label for="Username">Username</label>
        <input type="text" class="form-control" id="Username" name="Username" placeholder="Inserisci il tuo username" required value="@Model.Username" autocomplete="username" />
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group password-container">
        <label for="Password">Password</label>
        <input type="password" class="form-control" id="Password" name="Password" placeholder="Inserisci la tua password" required autocomplete="current-password"/>
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        <i class="bi bi-eye-fill" id="togglePassword" onclick="togglePasswordVisibility()"></i>
    </div>

    <div class="form-group">
        <div class="checkbox">
            <label asp-for="RememberMe">
                <input asp-for="RememberMe" /> @Html.DisplayNameFor(m => m.RememberMe)
            </label>
        </div>
    </div>

    <button type="submit" class="btn btn-login">ACCEDI</button>

    <div class="links-container">
        <a href="@Url.Action("RecuperoPassword", "Account")">Password dimenticata?</a>
        <a href="@Url.Action("Register", "Account")">Registrati</a>
    </div>
</form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function togglePasswordVisibility() {
            const passwordField = document.getElementById("Password");
            const toggleIcon = document.getElementById("togglePassword");

            if (passwordField.type === "password") {
                passwordField.type = "text";
                toggleIcon.classList.remove("bi-eye-fill");
                toggleIcon.classList.add("bi-eye-slash-fill");
            } else {
                passwordField.type = "password";
                toggleIcon.classList.remove("bi-eye-slash-fill");
                toggleIcon.classList.add("bi-eye-fill");
            }
        }
    </script>
   <script>
    document.addEventListener('DOMContentLoaded', function() {
        const alert = document.querySelector('.alert-success');
        if (alert) {
            setTimeout(() => {
                alert.classList.add('fade-out');
                
                setTimeout(() => {
                    alert.remove();
                }, 500); // Tempo per completare la transizione
            }, 3000); // 3 secondi prima di iniziare la dissolvenza
        }
    });
</script>

</body>
</html>